//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace myFirstWebApplicationASP.ServiceReferencelatest {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencelatest.WebServicelatestSoap")]
    public interface WebServicelatestSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStudents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getStudents", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/calculation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string calculation(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/calculation", ReplyAction="*")]
        System.Threading.Tasks.Task<string> calculationAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllFacultyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable getAllFacultyData(string srtExpression, string srtDirection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllFacultyData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> getAllFacultyDataAsync(string srtExpression, string srtDirection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/totalRecordCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int totalRecordCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/totalRecordCount", ReplyAction="*")]
        System.Threading.Tasks.Task<int> totalRecordCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllSubjectData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable getAllSubjectData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllSubjectData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> getAllSubjectDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/filterFacultyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable filterFacultyData(string facultyName, int exp, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/filterFacultyData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> filterFacultyDataAsync(string facultyName, int exp, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getFacultyDataById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getFacultyDataById(int facultyId, int subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getFacultyDataById", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getFacultyDataByIdAsync(int facultyId, int subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertUpdateFacultyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string insertUpdateFacultyData(int facultyId, string facultyName, double experience, int feePerLect, string lectDate, int isTakenLect, int subjectId, string subjectName, int editedSubjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertUpdateFacultyData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> insertUpdateFacultyDataAsync(int facultyId, string facultyName, double experience, int feePerLect, string lectDate, int isTakenLect, int subjectId, string subjectName, int editedSubjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteFacultyData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string deleteFacultyData(int facultyId, int subjectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/deleteFacultyData", ReplyAction="*")]
        System.Threading.Tasks.Task<string> deleteFacultyDataAsync(int facultyId, int subjectID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServicelatestSoapChannel : myFirstWebApplicationASP.ServiceReferencelatest.WebServicelatestSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServicelatestSoapClient : System.ServiceModel.ClientBase<myFirstWebApplicationASP.ServiceReferencelatest.WebServicelatestSoap>, myFirstWebApplicationASP.ServiceReferencelatest.WebServicelatestSoap {
        
        public WebServicelatestSoapClient() {
        }
        
        public WebServicelatestSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServicelatestSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServicelatestSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServicelatestSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string getStudents() {
            return base.Channel.getStudents();
        }
        
        public System.Threading.Tasks.Task<string> getStudentsAsync() {
            return base.Channel.getStudentsAsync();
        }
        
        public string calculation(int a, int b) {
            return base.Channel.calculation(a, b);
        }
        
        public System.Threading.Tasks.Task<string> calculationAsync(int a, int b) {
            return base.Channel.calculationAsync(a, b);
        }
        
        public System.Data.DataTable getAllFacultyData(string srtExpression, string srtDirection) {
            return base.Channel.getAllFacultyData(srtExpression, srtDirection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getAllFacultyDataAsync(string srtExpression, string srtDirection) {
            return base.Channel.getAllFacultyDataAsync(srtExpression, srtDirection);
        }
        
        public int totalRecordCount() {
            return base.Channel.totalRecordCount();
        }
        
        public System.Threading.Tasks.Task<int> totalRecordCountAsync() {
            return base.Channel.totalRecordCountAsync();
        }
        
        public System.Data.DataTable getAllSubjectData() {
            return base.Channel.getAllSubjectData();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> getAllSubjectDataAsync() {
            return base.Channel.getAllSubjectDataAsync();
        }
        
        public System.Data.DataTable filterFacultyData(string facultyName, int exp, string subject) {
            return base.Channel.filterFacultyData(facultyName, exp, subject);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> filterFacultyDataAsync(string facultyName, int exp, string subject) {
            return base.Channel.filterFacultyDataAsync(facultyName, exp, subject);
        }
        
        public System.Data.DataSet getFacultyDataById(int facultyId, int subjectId) {
            return base.Channel.getFacultyDataById(facultyId, subjectId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getFacultyDataByIdAsync(int facultyId, int subjectId) {
            return base.Channel.getFacultyDataByIdAsync(facultyId, subjectId);
        }
        
        public string insertUpdateFacultyData(int facultyId, string facultyName, double experience, int feePerLect, string lectDate, int isTakenLect, int subjectId, string subjectName, int editedSubjectId) {
            return base.Channel.insertUpdateFacultyData(facultyId, facultyName, experience, feePerLect, lectDate, isTakenLect, subjectId, subjectName, editedSubjectId);
        }
        
        public System.Threading.Tasks.Task<string> insertUpdateFacultyDataAsync(int facultyId, string facultyName, double experience, int feePerLect, string lectDate, int isTakenLect, int subjectId, string subjectName, int editedSubjectId) {
            return base.Channel.insertUpdateFacultyDataAsync(facultyId, facultyName, experience, feePerLect, lectDate, isTakenLect, subjectId, subjectName, editedSubjectId);
        }
        
        public string deleteFacultyData(int facultyId, int subjectID) {
            return base.Channel.deleteFacultyData(facultyId, subjectID);
        }
        
        public System.Threading.Tasks.Task<string> deleteFacultyDataAsync(int facultyId, int subjectID) {
            return base.Channel.deleteFacultyDataAsync(facultyId, subjectID);
        }
    }
}
